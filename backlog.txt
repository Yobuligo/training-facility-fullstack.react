- App
	- Refactor page style and display edges only in WQHD but not Full-HD
	- Improve repsonsive design for smaller devices (e.g. Tablets)
	- Language can be switched
	# Errors are displayed as toasts, which can be closed by close button, but don't disappear automatically
	# Unknown server errors are handled in an ErrorBoundaryPage
	# Display an ErrorBoundaryPage when calling an unknown url
	# useRequest must not call block, if the block is currently running
	# Introduce HttpStatusCodes
	
# ErrorPage
	# Clicking the Yeoljeong logo navigates to the dashboard

- Event Planner
	# Title must be mandatory. Saving must not be possible without title.
	# Description is optional
	# inputs are restricted to length of related db fields		
		# Title is restricted to 100 characters
		# Description is restricted to 100 characters
	# EventDefinition can be updated
	# EventDefinition can be deleted
	# Create, delete, update operations must be only allowed with ADMIN role
	# Calendar
		# Appointments of recurrence once 
			# must be displayed once at the specific date
		# Appointments of recurrence daily 
			# must be displayed daily
			# must not be displayed before the start date
			# must not be displayed after the end date
			# must be displayed endless if start and end date are equal
		# Appointments of recurrence weekly
			# must be displayed weekly
			# must not be displayed before the start date
			# must not be displayed after the end date
			# must be displayed endless if start and end date are equal
			# must only be displayed at the specific weekday
		# Appointments of recurrence monthly
			# must be displayed monthly
			# must not be displayed before the start date
			# must not be displayed after the end date
			# must be displayed endless if start and end date are equal
			# must only be displayed at the specific day of month
	# Loading EventInstances from EventDefinitions must consider the date time span - currently all instances are loaded from a definition
	# Bug: Calendar doesn't show earlier event e.g. from 16 - 18	
	
- My Trainings
	# User can register on and unregister from trainings
	# User can unregister from trainings where he was added manually (the user was added from a trainer, anyway the user must be able to unregister from the training)
	# Display loading spinner when register on or unregister from a training
	# Click on event instance displays registered users
	# User must not be registered twice on a training (check in db if user is already registered)
	# Event instances must be loaded correctly for each event definition (EventDefinitionApi.findByDataTimeSpanAndUser)	
	- Display event description on hover
	# Bug: Race condition error when creating event instances by different users at the same moment
	# Bug: click very fast register / unregister - at some time I will get an error - useRequest must not be allowed to call request, if it is already running
	# Bug: when opening my trainings in mobile view, only one training is displayed instead of all and the state (register / unregister) seems to be inconsistent - dateTimeSpan (from / to) was not correctly set for a day
	# Bug: when pressing register for one event instance the spinner button for all register buttons is displayed - Introduce separate component to provide one register button for each event.
	
- Event Registration
	# Display spinner when loading registrations
	# Registered user must be displayed
	# EventRegistrationState for registered user can be set (either present, missing or back to open)
	* Display loading spinner when changing EventRegistrationState (present, missing, open)
	# Registration can be closed
	# Display confirm dialog before closing event registration
	# Registration can be reopened
	# Closing and opening must be considered in multiple sessions (2 sessions, 1. session closes, 2. session tries to registers -> registrations must fail)
	# Display loading spinner when closing or reopening an EventInstance	
	- It must not be possible to register on past events
	# It must not be possible to register if event instance was closed
	# It must not be possible to unregister if event instance was closed
	# User can be added to EventInstance manually by search and add
	# Manually added users are added sorted
	# Registered users are displayed in the order they registered
	# Display loading spinner when searching for users
	- Display loading spinner when adding user
	# Manually added user can be deleted from EventInstance (needs to confirm the deletion)
	- Display loading spinner when deleting user
	- Trainer can be assigned to a training
	- Assigned trainer can be deleted
	- Assigned trainer is displayed in the calendar
	- Performance: Add indices to columns from and to of event-instances
	- Event Instance must be deletable
		- I want to delete an instance of an event definition (e.g. if the school is closed for some days)
		- Event definitions of deleted event instances must not be displayed
	- Bug: Error when trying to add a user, which was deleted in parallel. (2 Session: 1. session searchs for user, that should be added manually (user is displayed), 2. session deletes user, 1. session clicks add => technical error)
	
- Welcome
	# Display spinner when loading registrations I am registered on
	# Display upcoming events of the current week
	# Upcoming events are sorted chronologically
	# Upcoming events must be displayed for manually added users (user was added manually, anyway the event must be displayed at the welcome page)

- User Profile
	# Display loading spinner when loading user profile
	- Dummy objects are removed
	# User can be deactivated and activated (session must be deleted)
	# user must not be creatable without username, firstname, lastname and email
	# username must be unique
	# User can be marked as admin and vice versa
	# User role Admin is assigned to user, when marked as admin while creating
	- Only a valid email address can be persisted
	# Customer Id must be created and displayed
	# Joined on must be changeable in admin mode otherwise displayed
	# Joined on can be changed by entering values instead of using value help
	# inputs are restricted to length of related db fields
		# Firstname 50
		# Lastname 50
		# Email 255
		# City 50
		# Postal Code 10
		# Street 100
		# Phone 20
		# Bank Account BIC 11
		# Bank Account IBAN 34
		# Bank Account Institution 50
		# Bank Account Owner 100		
	# Current user must not be deactivatable
	# Current user must not be deletable	
	# UserBankAccount must be loaded with User
	# Delete user with user profile, bank account, gradings, roles, etc.
	# Refactor Collapsables can be toggled on click at title
	- Errors from backend must be translatable or mapped to client errors 
		- e.g. when user credentials are invalid or user is locked, the displayed messages are from the backend
	# Default user must not be able to change username, tariff, joined on and user roles (e.g. assigning admin role)
	# Bug: created user cannot be selected from user list	
	# Bug: Customer id is not displayed when user was created in backend
	# Bug: Details of created user is not displayed in User-List (create User -> save -> back to user list -> details are missing)
	
	# User Gradings
		# Gradings can be added, saved and reloaded
		# Gradings can be deleted
		# Display confirm dialog before deleting a grading
		# Bug: Error when entering achievedAt date manually
		
	- User can be forced to change his password
		- An admin can mark a user to change his password
		- With the next backend request an error thrown to trigger changing the password
	
# User List
	# Display loading spinner, when loading users
	# user must be sorted by name
		# Currently it is not sorted, if a user was added
		# Perhaps it should be sorted directly within the backend
	# Mark deactivated users
	# Mark admin users
	# Deactivated user must be displayed as deactivated otherwise it must be displayed as enabled
	# Users can be searched
	* Display loading spinner when searching - not required as it on clientside
	# Bug: As admin created user is shown as normal user.

# Login
	# Login must only be possible with valid username and password
	# Session expires after a certain time
	# Deactivated user must not be logged in
	# Display error if user credentials invalid
	- Display less technical error when login fails for an unknown reason
	
- Password
	- User must be able to change password
	
- Event Calendar
	# Start display of calender hours of first event and end hours of end of last event
	# Remove month view
	
- Event Calendar Overview
	# Provide separate route to calendar overview in display mode
	
- LabeledSelect
	- Bug: Reset input does not reset value correctly
		- e.g. choose is Admin in UserProfiles and cancel changes -> user is still displayed as admin
		
- Security
	# Add authority checks to backend functions (e.g. a normale user must not be able to create or delete users)
	- Move session persistence from local storage to cookies (http only)

- Check all ui endpoints and delete which are not required anymore
- Check all ui REST calls if they use useRequest
# Check all backend endpoints and add authorization checks
- We have to check the behavior for each REST request when it fails
- We have to check the transmitted data for each REST request if it can be reduced to only required information
- Edge Cases
	- Create an EventDefinition, register on an event and finally remove the EventDefinition. Does the EventInstance with the registration should be deleted? (Currently it would be even displayed at the Welcome page)

Best Practices Sequelize:
- DTO types do contain properties for ids of referenced objects and for the reference itself
- related objects in DTO types must be optional in entity interfaces (e.g. IUser has IUserProfile)
